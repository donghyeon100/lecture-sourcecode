<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.demo.model.mapper.TodoMapper">

	<!-- mapper : java(Mapper, DAO)에서 호출한 id에 따라 SQL을 연결하는 파일 -->
				  
	<!-- ***  필수 작성 *** -->
	<!-- namespace : SQL이 모여있는 공간(mapper)의 이름 지정하는 속성-->


	<!-- mapper.xml 생성 시 아래 구문은 무조건 삭제!! -->
	<!--   <cache-ref namespace=""/> -->
	
	
	<!-- 
		<select> 관련 속성
	
		- id : 태그를 식별하는 값
		- parameterType : SQL 실행 시 전달 받은 값의 자료형 (생략 가능, Mybatis - TypeHandler)
		- resultType : 조회 결과를 담아서 반환할 객체/변수의 자료형
		
		============================================================
		
		<insert/update/delete> 속성
		
		- id : 태그를 식별하는 값
		
		- parameterType : SQL 실행 시 전달 받은 값의 자료형 (생략 가능, Mybatis - TypeHandler)
		
		* DML 구문은 결과 행의 개수(int)가 반환되는 것으로 고정되어 있기 때문에
		 resultType이 존재하지 않음
		
	-->
	
	
	<!-- 
		mapper에서 java data(파라미터)를 SQL에 삽입하는 방법
		
		1) #{변수명 | 필드명} : SQL에 삽입 시 양쪽에 '' 붙여서 삽입
		
		ex) MEMBER_EMAIL = #{memberEmail}
							-> 'member01@naver.com'
		
		=================================================================
		
		2) ${변수명 | 필드명} : SQL에 삽입 시 양쪽에 '' 붙이지 않고 삽입
		
		ex) MEMBER_EMAIL = ${memberEmail}
							-> member01@naver.com  (오류 발생)
							
		??? ${} 언제 사용할까 ???
		1) 삽입할 값이 숫자인 경우 (숫자 리터럴은 '' 없음)
		
		2) SQL문 자체가 변해야 하는 경우에 사용
		
		ex) SELECT MEMBER_NICKNAME, ${key} FROM "MEMBER"
		
		- ${key} == ENROLL_DATE 인 경우
		SELECT MEMBER_NICKNAME, ENROLL_DATE FROM "MEMBER"
		
		- ${key} == MEMBER_ADDRESS 인 경우
		SELECT MEMBER_NICKNAME, MEMBER_ADDRESS FROM "MEMBER"
	 -->
	 
	 
	<select id="selectAll" resultType="Todo">
		SELECT TODO_NO, TODO_TITLE, COMPLETE,
			TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') REG_DATE
		FROM TB_TODO
		ORDER BY TODO_NO
	</select>
	
	<select id="getCompleteCount">
		SELECT COUNT(*) 
		FROM TB_TODO
		WHERE COMPLETE = 'Y'
	</select>
	
	<!-- 할 일 추가 -->
	<insert id="addTodo" parameterType="Todo">
		INSERT INTO TB_TODO
		VALUES(SEQ_TODO_NO.NEXTVAL, #{todoTitle}, #{todoContent}, DEFAULT, DEFAULT)
	</insert>
</mapper>
